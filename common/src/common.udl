[Enum]
interface Network {
    CryptoOrgMainnet();
    CronosMainnet();
    CosmosHub();
    Other(string chain_id, u32 coin_type, string bech32hrp);
};

[Enum]
interface SingleCoin {
  BaseCRO(u64 amount);
  CRO(u64 amount);
  UATOM(u64 amount);
  ATOM(u64 amount);
  Other(u64 amount, string denom);
};

[Wrapped]
typedef sequence<u8> PublicKeyBytesWrapper;

[Error]
enum PublicKeyBytesError {
    "InvalidLength",
};

dictionary CosmosSDKTxInfo {
    PublicKeyBytesWrapper sender_pubkey;
    u64 account_number;
    u64 sequence_number;
    u64 gas_limit;
    SingleCoin fee_amount;
    u32 timeout_height;
    string? memo_note;
    Network network;
};

[Enum]
interface CosmosSDKMsg {
  BankSend(string recipient_address, SingleCoin amount);
};

[Error]
enum ErrorWrapper {
  "EyreReport",
};

namespace common {
  [Throws=ErrorWrapper]
  sequence<u8> get_single_msg_sign_payload(CosmosSDKTxInfo tx_info, CosmosSDKMsg msg);
};